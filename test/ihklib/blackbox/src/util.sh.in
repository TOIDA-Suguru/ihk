function patch_and_build()
{
    fn_mckernel=$1
    fn_ihk=$2

    if [ -n $fn_mckernel ]; then
	pushd @WITH_MCK_SRC@
        patch -p1 < @CMAKE_INSTALL_PREFIX@/bin/${fn_mckernel}.patch
	popd
    fi

    if [ -n $fn_ihk ]; then
	pushd @WITH_MCK_SRC@/ihk
        patch -p1 < @CMAKE_INSTALL_PREFIX@/bin/${fn_ihk}.patch
	popd
    fi

    pushd /tmp
        rm -rf build
        mkdir build
        cd build
        cmake @WITH_MCK_SRC@ -DCMAKE_INSTALL_PREFIX=@WITH_MCK@
        make -j install
    popd

    if [ -n $fn_mckernel ]; then
	pushd @WITH_MCK_SRC@
        patch -R -p1 < @CMAKE_INSTALL_PREFIX@/bin/${fn_mckernel}.patch
	popd
    fi

    if [ -n $fn_ihk ]; then
	pushd @WITH_MCK_SRC@/ihk
        patch -R -p1 < @CMAKE_INSTALL_PREFIX@/bin/${fn_ihk}.patch
        popd
    fi
}

function detect_cpu_model()
{
    implementer=$(gawk '/CPU implementer/ { print $4; exit; }' /proc/cpuinfo)
    arch=$(gawk '/CPU architecture/ { print $3; exit; }' /proc/cpuinfo)
    var=$(gawk '/CPU variant/ { print $4; exit; }' /proc/cpuinfo)
    part=$(gawk '/CPU part/ { print $4; exit; }' /proc/cpuinfo)

    if [[ "$implementer" == "0x46" ]] && [[ "$arch" == "8" ]] &&
	[[ "$var" == "0x0" ]] && [[ "$part" == "0x001" ]]; then
	cpu_model="a64fx"
    elif [[ "$implementer" == "0x43" ]] && [[ "$arch" == "8" ]] &&
	[[ "$var" == "0x1" ]] && [[ "$part" == "0x0a1" ]]; then
	cpu_model="thunderx"
    else
	cpu_model="unknown"
    fi
}

function init_oom_killer()
{
    detect_cpu_model
    echo "[ INFO ] performing \"echo 0 > /proc/sys/vm/min_free_kbytes\""

    if [[ "$cpu_model" == "a64fx" ]] || [[ "$cpu_model" == "thunderx" ]]; then
	min_free_kbytes=$(cat /proc/sys/vm/min_free_kbytes)
	sudo bash -c 'echo 0 > /proc/sys/vm/min_free_kbytes'
    fi
}

function fini_oom_killer()
{
    echo "[ INFO ] performing \"echo $min_free_kbytes > /proc/sys/vm/min_free_kbytes\""

    if [[ "$cpu_model" == "a64fx" ]] || [[ "$cpu_model" == "thunderx" ]]; then
	sudo bash -c "echo $min_free_kbytes > /proc/sys/vm/min_free_kbytes"
    fi
}
